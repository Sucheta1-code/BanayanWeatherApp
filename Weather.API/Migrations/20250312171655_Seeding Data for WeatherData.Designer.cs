// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Weather.API.Data;

#nullable disable

namespace Weather.API.Migrations
{
    [DbContext(typeof(WeatherDataDbContext))]
    [Migration("20250312171655_Seeding Data for WeatherData")]
    partial class SeedingDataforWeatherData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Weather.API.Models.Domain.WeatherData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Temperature")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WeatherCondition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WeatherDatas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f7248fc3-2585-4efb-8d1d-1c555f4087f6"),
                            CityName = "Delhi",
                            LastUpdated = new DateTime(2025, 3, 12, 22, 46, 55, 591, DateTimeKind.Local).AddTicks(25),
                            Temperature = 30m,
                            WeatherCondition = "Sunny"
                        },
                        new
                        {
                            Id = new Guid("f7248fc3-2585-4efb-8d1d-1c555f4087f9"),
                            CityName = "Bhubaneswar",
                            LastUpdated = new DateTime(2025, 3, 12, 22, 46, 55, 591, DateTimeKind.Local).AddTicks(46),
                            Temperature = 55m,
                            WeatherCondition = "Sunny"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
